import argparse
import multiprocessing
import numpy as np
import time, code
import os, sys
import pandas as pd
from importlib.machinery import SourceFileLoader
import torch
import torch.nn as nn 
import pandas as pd
from sklearn.preprocessing import StandardScaler
from copy import deepcopy
from scipy.signal import convolve2d
from scipy.stats import multivariate_normal


# Find location of current file
scriptPath = os.path.realpath(__file__)
mainFolderName = scriptPath.split(f"Testing{os.sep}testDivideUpdate.py")[0]

if "domain" not in sys.modules:
	module = SourceFileLoader("baseball.py",f"{mainFolderName}Environments{os.sep}Baseball{os.sep}baseball.py").load_module()
	sys.modules["domain"] = module

if "spacesModule" not in sys.modules:
	module = SourceFileLoader("setupSpaces.py",f"{mainFolderName}setupSpaces.py").load_module()
	sys.modules["spacesModule"] = module
	SpacesBaseball = module.SpacesBaseball



def draw_noise_sample(rng,mean=[0.0,0.0],X=0.0):

	# X is squared already (x**2 = variance)
	
	if type(rng.bit_generator._seed_seq.entropy) == np.ndarray:
		seed = rng.bit_generator._seed_seq.entropy[0]
	else:
		seed = rng.bit_generator._seed_seq.entropy

	# Need to use rng.bit_generator._seed_seq.entropy instead of just rng to ensure same noises produced each time for given params 
	N = multivariate_normal(mean=mean,cov=X,seed=seed)
	
	return N

def getNormalDistribution(rng,covMatrix,resolution,X,Y):

	if "XYD" not in globals():
		global XYD

		XD,YD = np.meshgrid(X,Y,indexing="ij")
		tempXYD = np.vstack([XD.ravel(),YD.ravel()])

		XYD = np.dstack(tempXYD)[0]


	mean = [0.0,Y[int(len(Y)/2)]]
	# Results in mean = [0.0, 2.0870000000000077]
	# For plate_z -> Center of array/targets,
	# not quite center of strikezone


	N = draw_noise_sample(rng,mean,covMatrix)
	
	D = N.pdf(XYD)

	
	# Scale up probs by resolution^2 to avoid having very small probs (not adding up to 1)
	# This is because depending on the xskill/resolution combination, the pdf of
	# a given xskill may not show up in any of the resolution buckets 
	# causing then the pdfs not adding up to 1
	# (example: xskill of 1.0 & resolution > 1.0)
	# If the resolution is less than the xskill, the xskill distribution can be fully captured 
	# by the resolution thus avoiding problems.  
	D *= np.square(resolution)

	# Reshape back to original dimensions
	D = np.array(D).reshape((len(X),len(Y)))

	# code.interact("get...", local=dict(globals(), **locals()))

	return D


def getKey(info,r):
	return "|".join(map(str,info))+f"|{r}"


def getCovMatrix(stdDevs,rho):

	covMatrix = np.zeros((len(stdDevs),len(stdDevs)))

	np.fill_diagonal(covMatrix,np.square(stdDevs))

	# Fill the upper and lower triangles
	for i in range(len(stdDevs)):
		for j in range(i+1,len(stdDevs)):
			covMatrix[i,j] = np.prod(stdDevs) * rho
			covMatrix[j,i] = covMatrix[i,j]


	return covMatrix

def work(task,each):
	# Causes pickling error
	# spaces.updateSpaceParticles(task["rng"],each,task["state"],task["otherArgs"],wid)

	# 0.5 inches | 0.0417 feet
	delta = 0.0417

	allTempData = task["otherArgs"]["allTempData"]
	minUtility = task["otherArgs"]["minUtility"]
	
	# Assuming method will get called only with multi domain
	covMatrix = getCovMatrix(each[:-2],each[-2])
	key = getKey(each[:-2],each[-2])


	if key not in task["pdfsPerXskill"]:
		# print(f"Computing pdfs for {key}... (wid: {task['wid']})")
		task["pdfsPerXskill"][key] = getNormalDistribution(task["rng"],covMatrix,delta,task["targetsPlateXFeet"],task["targetsPlateZFeet"])
	else:
		# print(f"Pdfs info is present for {key}. (wid: {task['wid']})")
		pass


	if key not in task["evsPerXskill"]:
		# print(f"Computing EVs for {key}... (wid: {task['wid']})")
		
		Zs = task["Zs"]

		# t1 = time.perf_counter()
		task["evsPerXskill"][key] = convolve2d(Zs,task["pdfsPerXskill"][key],mode="same",fillvalue=minUtility)
		# print(f"Total time for convolve2d: {time.perf_counter()-t1:.4f}")
		

	else:
		# print(f"EVs info present for {key}... (wid: {task['wid']})")
		pass


def worker(wid,taskQueue,readyEvent,testDict):

	# # Find location of current file
	# scriptPath = os.path.realpath(__file__)
	# mainFolderName = scriptPath.split(f"Testing{os.sep}testDivideUpdate.py")[0]

	# if "domain" not in sys.modules:
	# 	module = SourceFileLoader("baseball.py",f"{mainFolderName}Environments{os.sep}Baseball{os.sep}baseball.py").load_module()
	# 	sys.modules["domain"] = module

	# if "spacesModule" not in sys.modules:
	# 	module = SourceFileLoader("setupSpaces.py",f"{mainFolderName}setupSpaces.py").load_module()
	# 	sys.modules["spacesModule"] = module
	# 	SpacesBaseball = module.SpacesBaseball


	while True:

		# Wait for the signal to start processing tasks
		readyEvent.wait() 

		task = taskQueue.get()

		
		# CASE: Done
		if task is None:
			taskQueue.task_done()
			break

	
		rng = np.random.default_rng(task["seedNum"])
		task["rng"] = rng


		# CASE: Task assigned to current worker
		# if task["wid"] == wid:
		print(f"Worker {wid} is doing task {task['particles']}")

		for each in task["particles"]:
			testDict[str(each)] = wid

			work(task,each)

		print(f"Worker {wid} finished task {task['particles']}")
	
		taskQueue.task_done()

		# CASE: Task not assigned to current worker
		# else:
			# taskQueue.put({"wid": task["wid"], "particles": task["particles"]})
			# print(f"Worker {wid} is waiting...")

	
if __name__ == '__main__':


	# Get arguments from command line
	parser = argparse.ArgumentParser(description='Compute the execution skill for agent given specific number of shots')
	parser.add_argument("-rank", dest = "rank", help = "Specify rank for job (master == 0)", type = int)


	seedNum = 1
	np.random.seed(seedNum)

	seeds = np.random.randint(0,1000000,1)

	rng = np.random.default_rng(seeds[0])

	state = None

	# 0.5 inches | 0.0417 feet
	delta = 0.0417

	spaces = SpacesBaseball([],1,sys.modules["domain"],delta,1,"",0,0,True)


	numParticles = 1000

	numWorkers = 2

	loadSize = int(numParticles/numWorkers)


	manager = multiprocessing.Manager()
	testDict = manager.dict()


	queue = multiprocessing.JoinableQueue()

	readyEvent = multiprocessing.Event() 


	processes = []

	# Start the workers
	for wid in range(numWorkers):
		process = multiprocessing.Process(target=worker,args=(wid,queue,readyEvent,testDict))
		# process = multiprocessing.Process(target=worker,args=(wid,queue,readyEvent,testDict))
		process.start()
		processes.append(process)



	# ################################################################
	# # FROM FRAMEWORK
	# ################################################################

	pitcherID = "455119"
	pitchType = "FF"

	maxRows = 1
	numObservations = 1

	infoPerRow = {}
	otherArgs = {}


	agentData = spaces.getAgentData(pitcherID,pitchType,maxRows,numObservations,seedNum)

	possibleTargetsLen = len(spaces.possibleTargetsForModel)

	for row in agentData.itertuples():

		index = row.Index

		infoPerRow[index] = {}

		allTempData = pd.DataFrame([row]*(possibleTargetsLen))

		# Update position of each copy of the row to be that of a given possible action
		allTempData["plate_x"] = np.copy(spaces.possibleTargetsForModel[:,0])
		allTempData["plate_z"] = np.copy(spaces.possibleTargetsForModel[:,1])


		# Include original 'row' (df with actual pitch info) to get the probabilities 
		# for the different outcomes as well as the utility - for the actual pitch
		allTempData.loc[len(allTempData.index)+1] = row

		
		########################################
		# NEW MODEL
		########################################

		batch_x = allTempData[sys.modules["modelTake2"].features].values
		batch_y = allTempData.outcome.values.astype(int)

		# Reshape so that each pa is a separate entry in the batch
		batch_x = batch_x.reshape((len(batch_x), 1,len(sys.modules["modelTake2"].features)))
		batch_y = batch_y.reshape((len(batch_y),1))

		torch_batch_x = torch.tensor(batch_x, dtype = torch.float)
		torch_batch_y = torch.tensor(batch_y, dtype = torch.long)

		ypred = sys.modules["modelTake2"].prediction_func(spaces.model,torch_batch_x,torch_batch_y)

		allTempData[['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8']] = nn.functional.softmax(ypred,dim = 1).detach().cpu().numpy()
		
		# code.interact("after...", local=dict(globals(), **locals()))

		########################################

		
		# Get utilities
		allTempData = sys.modules["utilsBaseball"].getUtility(allTempData)


		# Get updated info for actual pitch (actual pitch + probs + utility)
		row = allTempData.iloc[-1].copy()
		

		# Save info to reuse within exp | utility = observed reward
		infoPerRow[index]["observedReward"] = deepcopy(row["utility"])

		# Remove actual pitch from data
		allTempData = allTempData.iloc[:-1,:]
		
		minUtility = np.min(allTempData["utility"].values)

		infoPerRow[index]["allTempData"] = deepcopy(allTempData)
		infoPerRow[index]["minUtility"] = deepcopy(minUtility)

		

		# Populate Dartboard - Can create once since independent of xskill
		# t1 = time.perf_counter()
		Zs = spaces.setStrikeZoneBoard(allTempData,minUtility)


		otherArgs["allTempData"] = infoPerRow[index]["allTempData"]
		otherArgs["minUtility"] = infoPerRow[index]["minUtility"]
		otherArgs["Zs"] = Zs 
		
		################################################################



		################################################################

		particles = np.array([[8.8356, 10.7009, 0.6935, 1.2314], [6.6439, 5.836, 0.7235, 1.4387], [5.6144, 10.1403, 0.6814, 0.7034], [9.8395, 13.5053, 0.5641, 0.9683], [17.2791, 4.4537, -0.7109, 0.9476], [12.8922, 17.1597, 0.6317, 0.5609], [149.6885, 14.2923, 0.6567, 0.46], [9.5223, 20.5936, 0.6838, 0.4329], [4.5104, 19.266, 0.624, -2.9079], [6.4662, 12.2536, 0.5822, -2.9773], [6.1044, 19.1254, 0.631, 0.9196], [8.4581, 8.3888, 0.7035, 1.2638], [146.5503, 18.0999, 0.6646, 0.8404], [14.5403, 23.8384, 0.7078, 0.4781], [7.8853, 2.7347, 0.6546, 0.2592], [149.909, 21.1144, 0.5887, 1.385], [8.9424, 20.9444, 0.6936, 0.5101], [5.19, 13.3446, 0.6676, 0.6738], [148.1389, 19.8494, 0.5899, 0.4284], [19.8126, 8.1586, 0.701, 0.6703], [4.1152, 148.6993, 0.608, 0.9086], [147.2691, 10.9801, -0.6775, -2.7139], [9.5322, 4.7603, 0.6445, -2.974], [4.718, 19.457, 0.7056, 1.1123], [7.3607, 7.4413, 0.7345, 1.4152], [16.7487, 14.603, 0.6316, 1.3486], [3.8447, 14.1867, 0.7026, 1.4937], [7.8597, 11.6881, 0.6377, 0.254], [8.9439, 15.8736, 0.7415, 1.2968], [11.5412, 22.3516, 0.6987, -2.9349], [7.1085, 4.1737, 0.6992, 1.0458], [14.3919, 12.485, 0.6977, 0.4957], [9.8575, 6.7857, 0.6625, 0.5869], [7.4427, 8.8735, 0.6275, 1.3204], [5.0712, 10.0269, 0.6424, 0.8657], [4.5655, 14.8385, 0.7459, 1.4129], [13.2089, 8.7592, 0.736, 1.0571], [24.3409, 10.4586, 0.7346, 0.4449], [14.432, 23.1972, 0.605, 0.896], [5.7646, 20.0801, 0.6271, 0.4193], [11.5075, 17.3718, 0.6577, -2.8378], [4.2124, 12.7976, 0.6155, 0.5511], [148.6542, 22.5387, 0.6945, 0.627], [6.1094, 7.9001, 0.3235, 0.2571], [5.5558, 13.9324, 0.6376, 0.3994], [13.6539, 14.0755, 0.7311, 0.7541], [11.4358, 14.8279, 0.6441, 1.0886], [8.5442, 23.3547, 0.7204, 1.2703], [141.0884, 12.5144, 0.5538, 0.7294], [4.519, 12.2608, 0.5714, 0.386], [7.0218, 17.2651, 0.6829, 1.1915], [4.991, 17.3021, 0.661, 0.8085], [147.4226, 9.5342, 0.6992, 0.7995], [10.6461, 17.0555, 0.6868, 0.5582], [9.0759, 29.5648, 0.5668, 1.1055], [12.8615, 12.0831, 0.7449, 0.6553], [13.4695, 17.4085, 0.5786, 1.1277], [20.2355, 18.7069, 0.7145, 0.7289], [3.9245, 11.3464, -0.7166, 0.6806], [4.8061, 17.3431, 0.5293, 1.2369], [6.5131, 16.4213, 0.7266, 1.3842], [10.8604, 19.9026, 0.7005, 1.1367], [150.0846, 19.2427, 0.6608, 1.0848], [9.7997, 22.497, 0.6606, 0.648], [18.4811, 8.8604, 0.6633, 0.6572], [15.9456, 10.7089, 0.7146, 0.5294], [6.0662, 10.3374, 0.7128, 0.978], [11.4747, 7.2922, 0.6965, 0.752], [7.8548, 14.5646, 0.486, 1.0958], [5.0132, 23.4328, 0.6162, 0.7307], [7.6407, 13.4103, 0.7114, 0.8217], [149.4518, 26.1177, 0.5376, 0.8738], [2.5421, 10.1193, 0.6502, 0.8554], [4.4266, 15.8952, 0.6456, 0.8943], [6.3114, 23.3899, 0.7298, 1.0574], [147.1374, 14.4318, 0.6266, 0.9849], [7.1079, 25.9541, 0.7419, 1.0083], [14.2297, 26.5227, 0.5941, 0.4803], [12.8638, 21.4672, 0.6513, 1.0817], [10.071, 28.8696, 0.4968, 1.1249], [9.9151, 18.04, 0.6637, 1.1084], [3.3911, 14.9491, 0.7336, -2.6457], [14.2524, 17.1407, 0.6344, 1.4011], [9.8292, 14.9947, 0.7222, 1.2467], [150.3331, 25.7101, -0.7229, 0.4837], [4.6322, 16.0617, 0.6884, 1.3227], [3.9297, 17.861, 0.725, -2.9657], [147.1447, 11.0862, 0.6711, 1.1442], [11.153, 15.8328, 0.7121, 0.5229], [146.9772, 4.8293, -0.7482, 1.3928], [8.8525, 9.9024, 0.6225, 0.7434], [12.9084, 5.5234, 0.6566, 0.1518], [150.413, 12.3819, -0.7375, 0.7793], [6.9086, 2.5309, 0.6941, 0.7561], [145.2859, 14.7865, 0.6107, 0.9891], [8.7986, 9.3209, 0.7005, 1.0564], [8.6239, 11.7464, 0.7188, 1.1365], [12.7229, 8.1678, 0.6061, 0.9974], [10.8503, 16.1779, 0.618, 0.9324], [15.6763, 11.4715, 0.7136, 0.4943], [9.8532, 15.3335, 0.6952, 0.9813], [3.9907, 13.9384, 0.6428, 1.2068], [12.6014, 10.7574, -0.6497, -2.9421], [6.077, 4.4968, 0.7251, -2.9439], [5.1865, 11.1493, 0.7312, 1.3147], [7.6845, 12.6904, 0.631, 0.5632], [10.3159, 5.6947, 0.6883, 1.2157], [13.6852, 10.7665, 0.7396, 1.125], [4.0973, 11.0938, 0.7165, 0.7669], [16.2731, 11.92, 0.7019, 0.6986], [3.6003, 3.4653, 0.7354, -2.9374], [7.4875, 13.9504, -0.6987, -2.8231], [2.5797, 4.5101, 0.7059, 0.8436], [148.7768, 12.9503, 0.6733, 0.3657], [8.9409, 16.6569, 0.6507, 0.9024], [150.301, 7.2743, 0.6468, 0.644], [4.3406, 5.5224, 0.6426, 0.5736], [10.5488, 18.6048, 0.7106, 0.9514], [7.4765, 14.816, 0.7117, 1.0144], [14.555, 29.7256, 0.735, 0.5317], [8.3764, 13.9268, 0.6455, 0.6079], [21.8725, 4.5839, 0.7402, 0.8708], [144.1967, 12.5526, 0.576, 1.3564], [6.9945, 8.8731, 0.6598, 1.1416], [5.1316, 6.2039, 0.7218, 0.9434], [148.9255, 19.6218, 0.7333, 0.8547], [11.8806, 24.4239, -0.6817, 0.6194], [8.4992, 24.3196, 0.4963, 1.3575], [5.5217, 3.6114, 0.5434, 1.0155], [149.5893, 24.3603, 0.6371, 1.1016], [18.1003, 15.2738, 0.3069, 0.7795], [5.397, 11.9733, -0.7391, 1.3684], [3.8236, 5.5626, 0.6725, 0.3134], [11.5109, 11.4736, 0.6647, 0.9104], [5.8933, 12.1376, -0.7327, 1.2533], [9.5754, 16.7129, 0.6986, 0.9405], [22.8252, 9.0651, 0.679, 1.4362], [145.6808, 4.2784, 0.6824, 0.7607], [9.9311, 9.2292, 0.6573, 1.4716], [149.7941, 15.0909, 0.5471, 1.2857], [10.6841, 13.3148, 0.7082, 0.7371], [13.3869, 12.4355, 0.7108, 0.8233], [3.0664, 13.7656, 0.6357, 0.5662], [6.2086, 12.3642, 0.5893, 0.642], [13.2387, 9.883, 0.5869, 0.2551], [5.8904, 6.3043, 0.5894, 0.7147], [150.3796, 6.4782, 0.6651, 0.9394], [6.9912, 20.1075, 0.6966, 0.7216], [11.8028, 4.7141, 0.6565, 1.2436], [7.287, 21.6388, 0.7001, 0.7751], [2.5316, 13.4651, 0.5945, 0.9718], [16.4344, 10.0636, 0.6426, 0.4847], [148.8382, 13.2863, 0.677, 1.004], [12.6438, 8.4056, 0.6973, 0.6314], [8.9091, 11.0671, 0.6886, 0.6337], [18.0133, 23.3785, 0.7188, 0.5899], [15.865, 19.1066, 0.6336, 1.0109], [7.5616, 10.1413, 0.6643, -2.6304], [143.8734, 19.5482, 0.6092, 1.4346], [6.5518, 13.3291, -0.7418, 0.8476], [14.5539, 9.4971, 0.738, 0.4165], [6.0314, 6.6314, 0.7128, 0.7843], [7.4637, 12.1392, 0.6809, -2.9663], [2.7181, 4.3971, 0.669, 1.2582], [11.5353, 11.4785, 0.7131, 1.3246], [4.1795, 15.1333, 0.6179, -2.8703], [5.505, 11.2812, 0.6705, 1.2248], [9.8328, 17.3619, 0.7486, 0.8965], [7.8594, 14.6355, 0.7304, 1.1989], [9.6487, 16.2042, -0.6975, 0.8435], [7.9415, 6.3186, 0.7108, 0.5335], [3.3257, 21.1235, -0.7424, 1.1622], [149.5971, 21.5518, 0.6677, 1.4255], [9.41, 14.1232, 0.6726, 0.9402], [10.1051, 16.8881, 0.7438, 0.8498], [12.4593, 21.1634, 0.684, 1.0661], [10.0837, 26.0172, 0.4129, 0.5574], [147.6453, 15.4367, 0.6433, 0.48], [7.0562, 6.6829, 0.7259, 1.1109], [6.9283, 16.4647, 0.7139, 1.322], [6.2174, 15.3193, 0.7116, 0.6107], [3.7793, 139.6788, 0.6055, 0.5126], [3.6544, 14.7525, 0.6881, 0.9687], [7.6506, 13.6734, 0.7274, 1.1603], [7.2425, 8.3965, 0.6684, 0.6405], [9.8779, 14.0706, 0.6271, 0.9631], [8.6625, 19.0023, 0.6942, 0.881], [6.652, 10.536, 0.5383, 1.3186], [6.2413, 13.6359, -0.7121, 0.9406], [7.4114, 11.529, -0.6754, 0.2513], [7.2676, 15.9173, 0.6444, 1.3748], [6.1558, 15.7702, 0.4711, 0.5806], [14.7219, 28.748, 0.7167, 1.0282], [12.3063, 20.3521, 0.7198, 1.0538], [8.2362, 19.8334, 0.6406, 1.0474], [4.7954, 11.215, 0.6632, 1.262], [14.7893, 17.4452, 0.6488, 0.8589], [95.7442, 142.6837, -0.5584, -1.4316], [6.4392, 8.6095, 0.6718, -2.9495], [148.4749, 12.4685, 0.6713, 0.7302], [12.0667, 18.524, 0.5613, 1.3051], [139.1421, 11.334, 0.7364, 0.9455], [149.5364, 10.1247, 0.6953, 0.6748], [11.2547, 27.66, -0.7306, 1.0305], [149.7004, 19.2866, 0.7059, 0.5314], [6.8479, 10.7541, 0.7401, 0.8469], [149.0002, 13.8651, 0.6823, 0.9932], [7.3256, 6.2551, 0.7264, 1.1724], [9.3503, 17.5703, 0.6906, 1.0137], [5.3795, 13.2978, 0.691, 0.88], [16.9098, 14.0186, 0.6123, 1.1478], [17.6641, 10.9529, 0.698, 0.9724], [4.8621, 15.7165, -0.6959, 1.4352], [5.6137, 17.0135, -0.7245, 1.2243], [3.0222, 147.9661, 0.6275, 1.0424], [8.4275, 10.7573, 0.6614, 1.3295], [4.596, 21.8976, 0.6066, 1.0237], [146.145, 24.903, -0.7483, 1.3932], [7.3588, 10.1563, 0.7273, 1.0211], [3.7943, 10.0255, 0.7396, 0.953], [145.7458, 19.1748, 0.6399, 0.935], [5.5981, 11.2565, 0.7405, 1.4189], [7.5911, 7.093, 0.7164, 1.0998], [144.6186, 15.0415, 0.6609, 0.3665], [9.4629, 12.8739, 0.6407, 1.2291], [146.7759, 17.1072, 0.5985, 0.7959], [3.6122, 11.4841, 0.3914, 0.6519], [4.7127, 12.8487, 0.5763, 1.3178], [10.9659, 10.5051, 0.6736, 0.8699], [6.4877, 16.7221, -0.703, 0.9882], [4.0899, 13.4176, 0.7318, 1.2138], [148.0129, 6.2265, 0.6764, 1.374], [11.6833, 19.3011, 0.3723, 0.4577], [5.1638, 24.709, -0.7362, 1.4306], [11.1103, 5.8176, 0.7036, 0.7417], [7.8904, 5.1143, 0.675, 1.2151], [9.6764, 10.8614, -0.7448, 0.6623], [2.5532, 15.2844, 0.61, 1.0148], [15.8007, 14.0988, 0.7366, 1.0519], [3.0554, 16.213, 0.5749, 0.9955], [147.9119, 14.0519, 0.6871, 0.5005], [18.4064, 29.3837, 0.6147, 0.9698], [14.426, 24.9062, 0.6289, 0.6926], [10.7864, 9.4092, 0.5936, 1.0683], [4.8408, 19.8423, 0.6059, 0.9321], [15.4159, 12.5923, 0.6671, 0.7955], [7.712, 5.167, 0.6618, -2.862], [6.1123, 14.9567, -0.748, 0.9152], [3.8637, 11.4985, 0.6389, 0.3575], [9.0096, 10.0674, 0.6309, 0.3366], [15.2502, 19.5872, 0.6699, 0.7074], [144.0593, 10.2667, 0.685, 1.4612], [8.6996, 5.089, -0.7116, 1.0401], [12.0804, 11.2365, 0.6139, 1.4512], [144.9485, 15.9781, 0.675, 1.415], [8.224, 10.6241, 0.7248, 1.3395], [149.1851, 13.1201, 0.5821, 0.8847], [20.5071, 19.8589, 0.7211, 1.0644], [5.7805, 14.7777, 0.7076, 1.3138], [7.447, 5.877, -0.7212, 1.343], [10.6729, 29.0583, 0.4821, 0.5526], [11.0509, 11.7307, 0.7009, 0.4724], [3.0464, 13.983, 0.6745, 0.6641], [11.2669, 10.1543, 0.6857, 0.9697], [4.266, 9.9489, 0.6198, 0.6962], [147.3337, 3.4654, 0.5989, 0.1965], [14.5897, 10.8874, 0.5809, 1.0169], [6.8735, 20.9864, 0.7064, 1.1858], [5.312, 16.0964, -0.6861, 1.4522], [3.7984, 9.9804, -0.7421, 0.5914], [150.4917, 12.9436, 0.7165, 0.8363], [147.8869, 12.3678, 0.7183, 0.7114], [5.4943, 11.8052, 0.6326, 0.9629], [8.8505, 10.7477, 0.708, 0.7196], [148.8974, 14.0798, 0.6706, 0.6997], [4.0169, 8.2119, 0.6952, 0.4351], [7.2685, 7.7996, 0.6367, 1.0018], [146.5644, 13.7604, 0.6678, 0.5696], [6.2072, 10.3682, -0.7478, -2.8612], [147.4435, 8.442, -0.7415, 1.2], [10.9467, 12.1617, -0.7398, 1.3189], [9.9875, 25.7993, 0.6785, 1.2411], [6.9197, 11.1357, 0.6326, 0.816], [9.3144, 11.89, 0.5507, 1.2234], [12.9853, 25.2634, 0.6782, 1.2424], [13.8919, 30.0153, 0.5546, 1.3259], [19.8305, 17.668, 0.7089, 0.9253], [11.1694, 17.6285, 0.695, -2.9962], [4.6214, 27.7249, 0.744, 1.1711], [6.3608, 3.3062, 0.7083, 0.5966], [7.5252, 17.0577, 0.6475, 1.1658], [5.3079, 9.8379, 0.6922, 0.9986], [147.0442, 9.4468, 0.6578, 1.3011], [11.712, 15.8191, 0.7247, 0.7376], [10.412, 11.6837, 0.6385, 0.9753], [12.0797, 15.5146, -0.7182, 1.2776], [12.2629, 16.3616, 0.7369, 0.9441], [4.6039, 10.5547, 0.6401, 1.0893], [8.2236, 25.7976, 0.7227, 1.488], [8.6815, 9.7082, 0.62, 1.357], [3.3925, 149.3925, -0.6987, 0.6238], [6.8298, 10.1402, 0.631, 0.684], [148.4624, 16.7572, 0.6398, 0.9056], [3.3763, 9.8057, 0.4832, 1.1327], [149.1571, 8.4441, 0.6398, 0.7583], [4.4922, 5.7113, 0.668, 0.6235], [10.8194, 12.2394, 0.6275, 0.8806], [5.1329, 15.8939, 0.674, 0.6366], [18.259, 14.0425, -0.7101, 0.54], [9.8396, 21.3715, 0.7451, -2.9988], [12.9057, 18.9311, 0.7294, 1.1549], [7.528, 6.2263, 0.7319, 1.0388], [12.343, 16.0075, 0.6433, 0.7564], [9.1228, 6.9835, -0.7377, 0.8667], [22.4909, 14.0592, 0.5997, 1.0993], [4.5943, 22.1577, -0.6929, 0.9654], [12.3142, 7.6214, 0.744, 0.5809], [5.642, 6.1709, -0.7296, 1.437], [7.7444, 8.0161, 0.6773, 0.6796], [15.8666, 5.4019, 0.5389, 1.4487], [15.9654, 11.3734, 0.7098, 1.3247], [6.5368, 14.682, 0.6241, 0.7216], [12.5745, 21.3202, 0.6645, 0.7066], [7.1435, 4.6395, 0.6261, 1.2102], [3.5171, 8.433, 0.6519, 0.585], [5.5541, 13.9773, 0.629, 0.9937], [6.2398, 150.3595, 0.6598, 1.1871], [13.8413, 6.5162, 0.749, -2.964], [8.7586, 31.3868, 0.625, 1.1513], [15.0158, 8.9661, 0.597, 1.4418], [2.6215, 12.4284, 0.7031, 0.5781], [7.5658, 11.3776, -0.7429, 1.4927], [16.4665, 18.9052, 0.6789, 0.8503], [11.4062, 12.0372, 0.6449, 0.8182], [10.1407, 13.298, 0.7381, 1.2873], [12.6713, 11.9769, 0.5937, 0.6664], [4.8006, 20.0437, 0.5611, 0.8954], [148.1037, 4.3715, 0.6557, 0.5261], [8.3274, 15.9547, 0.6683, 1.2342], [21.8392, 10.1623, 0.6227, 1.3924], [148.458, 16.3156, 0.6039, 1.3413], [145.2289, 14.2875, 0.7174, 1.2761], [3.8419, 6.3627, 0.6199, 1.2636], [6.4528, 17.8933, 0.6228, 0.6417], [9.1034, 7.9583, 0.6717, -2.8624], [4.4106, 18.601, 0.7074, 0.9298], [3.2752, 147.9269, 0.5971, 0.5981], [16.8691, 8.0355, 0.3936, 0.4969], [10.9116, 16.6692, 0.6311, 0.9022], [9.6725, 4.1108, 0.6864, 0.9705], [9.289, 13.5857, 0.6156, -2.7921], [9.7225, 13.13, -0.7486, 0.5415], [2.6419, 8.2428, 0.5909, 0.8705], [15.3504, 13.27, -0.7126, 1.2894], [6.0182, 13.1763, 0.6755, 1.0113], [7.499, 17.1797, -0.73, 1.2797], [9.0704, 14.9014, 0.674, 0.7042], [14.6573, 19.7465, 0.7167, 0.4363], [13.455, 18.4317, -0.7248, 1.1715], [12.0223, 13.289, -0.7217, 0.86], [3.7091, 12.6452, 0.7093, 1.3295], [9.227, 18.925, 0.5496, 1.3568], [3.3941, 149.4886, 0.6482, 1.1189], [10.562, 18.7541, 0.7289, 1.494], [7.4938, 14.7429, 0.6308, 1.4581], [7.5698, 5.4199, 0.6168, 0.7966], [7.1867, 13.4656, -0.6816, 0.961], [150.0191, 20.8936, -0.7401, 1.0812], [12.2081, 13.066, 0.6444, 0.63], [149.494, 24.3646, -0.745, 0.4608], [4.9907, 8.3888, 0.7223, 1.0203], [9.4426, 17.2776, 0.6582, 0.6456], [9.0712, 10.217, 0.574, 1.0668], [148.3865, 9.2741, 0.6257, 0.7412], [14.5352, 20.3324, 0.5241, 0.4728], [17.6326, 15.4638, 0.6168, 1.2291], [31.0961, 18.0684, 0.645, 0.7826], [143.863, 13.3512, 0.7148, 0.5938], [16.8631, 12.1168, 0.6793, 1.1034], [148.5876, 20.9438, 0.7126, 1.1695], [17.6121, 18.0801, 0.6865, 1.2554], [4.7649, 19.0818, 0.6496, 1.2905], [149.0217, 27.8616, 0.7055, 1.0753], [11.2011, 15.4254, 0.6822, 1.1818], [11.1755, 11.1925, -0.733, 0.7075], [146.8822, 13.5856, 0.741, 0.7823], [9.4669, 20.5049, 0.6644, 0.9427], [14.5694, 9.6542, 0.6522, 0.3556], [8.3843, 14.556, 0.6201, 1.3932], [2.5177, 12.757, -0.75, 0.617], [150.2799, 8.499, -0.7462, 1.4554], [8.8771, 16.0917, 0.6561, 1.2596], [5.8992, 17.1545, 0.7092, 0.4073], [9.2288, 17.6721, 0.6922, 0.9968], [13.4546, 17.0847, 0.598, 0.6298], [3.2763, 17.1356, 0.6872, 0.4774], [14.0216, 20.3944, 0.7184, 0.7874], [6.7693, 27.4699, 0.6328, 1.2663], [6.7571, 17.7841, 0.6504, 1.166], [8.7633, 9.3915, 0.619, 0.4179], [4.3839, 7.0133, -0.7398, 0.7631], [8.1379, 14.8561, 0.75, 1.1216], [6.3496, 5.9394, 0.6544, 1.2551], [5.6011, 14.9478, 0.6008, 0.9411], [16.3098, 17.5942, 0.673, 1.4053], [150.2513, 12.934, 0.7174, 0.7561], [3.5898, 20.6651, 0.6961, 0.9182], [28.7711, 26.8483, 0.4517, 0.5294], [9.3854, 4.7846, -0.6971, 1.185], [5.9425, 3.1413, 0.7254, 0.8569], [8.2195, 19.9479, 0.6031, 0.6062], [10.7876, 17.352, -0.7231, 0.6261], [7.736, 13.6334, 0.6837, 1.3507], [145.5574, 21.781, 0.6355, 1.2389], [8.444, 20.4632, -0.7374, 0.9655], [8.2525, 16.8658, 0.5331, 1.3437], [6.607, 18.086, -0.7351, 0.9448], [9.4518, 9.6026, 0.7338, 1.0673], [7.4155, 7.5689, 0.6952, 0.7199], [8.9758, 14.7111, -0.7084, -2.7415], [5.9705, 11.9358, 0.6721, 0.9181], [6.4985, 19.0862, 0.7478, 0.8019], [8.4657, 18.6727, -0.7161, 1.093], [12.4171, 9.6036, 0.708, 0.7198], [5.6719, 18.3616, -0.7391, 1.1758], [13.1, 13.7243, -0.7319, -2.8947], [4.944, 26.8001, 0.682, 0.6663], [9.9568, 18.374, 0.7306, 1.3931], [8.661, 16.3077, 0.6938, 0.851], [5.8211, 12.8878, 0.6076, 0.4768], [7.1035, 20.007, 0.5971, 0.3028], [4.8954, 10.8616, 0.6391, 1.3053], [13.2626, 11.7587, 0.7163, 0.8052], [12.0342, 145.2518, 0.6911, 1.1252], [12.3344, 10.4928, 0.7044, 0.8826], [143.8644, 15.4789, 0.6354, 0.7275], [10.2069, 11.8308, 0.7162, 1.0135], [7.4487, 150.4249, 0.7121, 0.7071], [7.9538, 11.1297, 0.6669, 1.3529], [15.1251, 19.1932, 0.5217, 1.1432], [17.7132, 24.8849, 0.6246, 0.7934], [8.7142, 19.4576, 0.5462, 1.0165], [7.9585, 9.8549, -0.7496, 0.7537], [4.2689, 10.7762, 0.588, 1.2647], [11.32, 7.1894, 0.7039, 0.631], [17.2839, 147.2234, 0.6658, 1.1076], [13.1778, 19.4424, 0.6573, 0.8888], [7.5529, 21.3252, 0.6543, 0.5638], [4.2073, 25.9817, 0.5909, 1.1426], [12.5532, 15.6181, 0.7236, 1.2004], [12.298, 20.0929, 0.6724, 0.9395], [13.2252, 14.0353, -0.7252, 0.7786], [10.2072, 11.3215, 0.5803, 1.3375], [3.5178, 18.3321, 0.7276, 0.9701], [9.9627, 12.915, 0.6505, 1.3524], [5.2923, 14.424, 0.6904, 0.7745], [148.1768, 3.167, 0.6698, -2.9886], [3.9314, 14.6354, -0.7327, 0.7232], [7.6391, 14.808, 0.729, 0.7161], [3.974, 20.964, 0.6965, 1.3273], [11.9979, 19.7623, 0.5655, 1.3252], [4.5884, 8.8063, 0.6959, 0.6113], [16.9797, 17.2599, 0.5821, 0.7199], [5.4096, 9.2882, 0.636, 1.1331], [13.1238, 16.4693, 0.7174, 0.9091], [17.0081, 26.9858, 0.5449, 0.7017], [16.46, 25.874, 0.6124, 1.0045], [10.6936, 17.0709, -0.7365, 0.9926], [14.1359, 18.9677, 0.5314, 1.135], [10.0624, 19.686, -0.6913, 1.2537], [8.3933, 7.7037, 0.6263, 0.9106], [9.6562, 12.9459, 0.7342, 0.3782], [6.9443, 18.6799, 0.6506, 1.1217], [147.389, 19.5671, 0.5815, 1.4949], [13.6356, 20.3616, 0.6813, 1.4918], [9.0509, 14.5676, -0.7076, 0.6256], [5.0278, 8.5739, 0.7194, 0.7557], [10.0031, 23.6223, 0.7437, 1.2913], [9.5893, 5.5117, 0.6676, 0.6258], [144.2063, 16.3699, 0.6098, 1.1782], [6.837, 18.3939, 0.6941, 0.6868], [4.7802, 23.7757, 0.6828, 0.5527], [5.9284, 8.7968, 0.7241, 1.0712], [7.8066, 15.7359, 0.7053, 0.8604], [5.3655, 13.668, 0.6405, 0.7189], [3.8261, 25.7482, 0.6897, 1.1385], [6.2296, 147.3559, 0.6058, 0.5136], [11.5493, 10.571, 0.6715, 0.9331], [10.7774, 18.5257, 0.6649, 0.5331], [5.4808, 16.2376, 0.7118, 0.7623], [8.632, 7.8405, 0.6344, 1.4989], [5.8754, 7.9081, 0.7288, 1.3131], [9.7049, 9.4828, 0.7195, 0.6043], [12.3849, 2.9449, 0.7102, 0.9217], [16.7093, 21.5121, 0.2813, 0.594], [15.6198, 7.3753, -0.7166, 0.8379], [6.1085, 12.9234, 0.6923, -2.7185], [11.1168, 8.9767, 0.6706, 1.1252], [2.6935, 14.5991, 0.595, 1.4907], [18.5878, 23.3875, 0.6674, 0.768], [3.7841, 20.8273, 0.5693, 1.363], [9.6463, 17.7329, 0.6414, 1.1152], [6.2145, 15.5605, 0.6657, 1.1763], [7.8539, 15.1341, 0.7023, 1.2815], [145.6669, 8.6794, 0.723, 0.6987], [12.9899, 4.0432, -0.7214, -2.974], [2.8552, 16.7315, -0.733, 1.3368], [8.8814, 16.9818, 0.6253, 0.7493], [13.5969, 7.9103, 0.5988, 1.0081], [2.88, 15.3288, -0.7391, 0.9066], [148.6825, 10.0196, 0.6393, 0.4778], [9.2403, 14.7453, 0.6265, 1.2499], [9.5552, 14.0849, 0.6578, 0.4706], [7.8761, 21.5153, 0.6878, 0.8094], [14.1123, 16.5147, 0.6536, 1.3033], [9.0308, 16.1644, 0.7293, 1.3437], [149.6162, 14.3578, 0.7229, 0.884], [16.2092, 15.7459, 0.6592, 1.108], [8.0852, 18.1177, 0.7051, 1.0165], [9.3388, 23.0644, 0.6421, 0.9577], [9.8941, 14.3006, 0.7332, 0.8407], [149.2582, 14.6453, 0.7173, 0.6554], [11.2462, 7.6405, 0.5909, 0.3539], [5.3485, 10.2252, 0.7103, 0.6588], [148.1556, 13.9054, 0.657, 0.7221], [3.7166, 11.5827, 0.6958, 0.6962], [10.0976, 13.0513, 0.6928, 1.2604], [12.8415, 5.1724, 0.6696, 1.1368], [5.5512, 17.9745, 0.6534, 0.5135], [15.3889, 7.7538, 0.6692, 1.2779], [6.753, 13.7294, 0.67, 0.7575], [4.9887, 8.4644, 0.693, 0.2841], [14.2484, 10.7878, 0.6561, 1.0163], [7.1101, 13.6984, 0.6916, 1.071], [4.1131, 19.4419, 0.6331, 0.4498], [149.8944, 18.3791, 0.6782, 0.5797], [14.7454, 15.724, 0.7271, 0.6532], [12.3039, 19.972, 0.7077, 0.6902], [5.7447, 12.2871, -0.7492, 1.175], [30.2175, 18.9947, 0.6732, 0.9038], [11.67, 21.5771, 0.7009, 0.7764], [9.8, 4.5294, -0.7029, 0.6546], [14.0899, 10.8602, 0.6525, 1.1028], [6.8708, 14.7155, 0.6476, 1.2899], [5.3492, 3.5188, 0.612, 0.8527], [12.1256, 8.2882, 0.5623, 0.5241], [17.854, 9.9358, 0.5408, 1.2339], [4.4611, 3.9005, 0.5831, 1.2855], [6.4217, 17.0231, 0.6512, 0.9439], [8.6375, 17.2593, 0.6139, 1.0015], [4.1646, 21.0784, -0.6645, 1.3122], [3.6696, 11.2623, 0.7135, 0.7989], [16.0719, 16.4183, 0.7476, 1.291], [9.6745, 6.4116, 0.6258, 0.9522], [6.9511, 5.1303, 0.6323, 1.3483], [16.0616, 18.5898, 0.7249, 1.1402], [2.931, 12.3115, -0.7059, 0.6359], [4.7045, 19.8744, 0.6557, 0.6947], [3.0211, 11.5845, 0.6932, 0.9933], [145.6738, 145.7546, 0.6538, 0.6878], [4.4345, 4.7568, 0.5715, 0.9784], [150.1841, 14.2274, 0.5707, 1.2458], [4.021, 24.2635, 0.7263, 1.1532], [9.1979, 20.0822, -0.6822, 0.9117], [2.6666, 11.3226, 0.6277, 0.2699], [7.5328, 8.3263, 0.5871, 1.1037], [2.6246, 20.9732, 0.7255, 1.0816], [3.7424, 21.846, 0.7105, 0.6537], [150.063, 12.7641, 0.6486, 1.3198], [5.4277, 14.4681, 0.7334, 0.5462], [11.9363, 17.0357, 0.7042, 0.9059], [5.5574, 16.8926, 0.7403, 1.158], [11.5591, 24.9621, 0.5768, 0.5795], [14.8527, 26.2099, 0.7203, 1.2869], [3.9508, 12.8016, 0.6564, 1.1688], [4.6518, 14.309, 0.5907, 1.0706], [8.1556, 18.6746, 0.7164, 0.6797], [149.2674, 22.4379, -0.7225, 1.0808], [11.4846, 6.9761, 0.6879, 0.8634], [148.6361, 21.7008, 0.7068, 0.6364], [4.3173, 7.3342, -0.7368, 0.7544], [12.6562, 17.9113, 0.6811, 0.8169], [147.0016, 9.4385, -0.7224, -2.969], [8.3551, 14.8534, 0.6216, 0.6934], [6.2597, 11.5753, 0.6215, 1.1085], [8.9733, 16.5671, 0.7192, 0.5162], [10.1878, 6.1436, 0.6362, -2.7981], [11.4606, 15.7167, 0.6866, 1.358], [19.2839, 11.4688, 0.7225, 0.7897], [7.6137, 7.9411, 0.749, 0.8437], [16.8592, 15.0926, -0.7342, 1.1258], [65.3646, 47.8529, 0.4276, -0.3097], [147.4402, 20.159, 0.6653, 0.9843], [24.6578, 28.7658, 0.3383, 1.2513], [6.5986, 10.7158, 0.6184, 0.8501], [5.0477, 11.9214, 0.659, -2.8653], [14.9988, 15.8332, -0.7497, 1.1976], [4.0516, 4.1301, 0.7375, 1.0031], [10.3751, 6.6234, 0.702, -2.9405], [149.619, 13.7328, 0.5353, 0.7583], [14.4669, 14.2267, 0.5205, 0.996], [6.5823, 20.235, 0.6981, 0.7692], [5.5757, 7.7721, 0.6247, 1.4276], [9.4206, 9.1132, 0.6757, 0.5887], [8.3697, 16.1271, -0.7175, 0.8853], [13.3453, 13.9707, 0.7469, 0.9344], [6.0274, 14.3326, 0.614, 0.6036], [149.6393, 22.5955, 0.5997, 1.1129], [10.6576, 9.6058, 0.7056, 1.3051], [10.8231, 16.5612, 0.6544, 1.4176], [11.6995, 22.0252, 0.6103, 1.3778], [14.4022, 26.2636, 0.6917, 0.5019], [10.417, 8.5731, 0.6887, 1.3892], [5.0625, 25.0972, 0.5409, 1.2169], [149.0464, 18.3852, 0.6742, 0.1949], [9.4976, 11.3433, -0.7316, 0.7061], [12.1981, 9.5913, 0.6771, 1.4845], [16.308, 22.4012, 0.7499, 0.8712], [7.2285, 9.3524, -0.7382, 1.3605], [5.0064, 23.4989, 0.6861, 0.4919], [10.5625, 22.3879, 0.7057, 1.4745], [3.1973, 150.3352, 0.6148, 0.7329], [8.4774, 7.9117, 0.6417, 1.3218], [11.1143, 14.4209, -0.7403, 0.7395], [4.0415, 23.6497, 0.6662, 1.0441], [6.8288, 17.7283, 0.6223, 1.4484], [3.8325, 20.4762, 0.6221, 1.253], [148.9772, 14.2343, 0.6834, 1.4364], [12.2384, 21.6196, 0.6022, 0.992], [16.4997, 26.9393, 0.7047, 0.8433], [143.794, 14.5992, 0.6878, 1.3213], [149.3667, 15.2247, 0.708, 1.2272], [3.7313, 8.2339, 0.6883, 0.8439], [10.4011, 18.0951, 0.6368, 0.9235], [10.9681, 7.9169, 0.6263, 0.5345], [13.14, 16.2513, 0.6371, 0.7277], [7.4262, 9.1292, 0.7451, 0.9833], [4.1871, 9.0146, 0.5624, 0.5791], [3.9809, 16.9987, 0.5965, 0.9596], [148.7535, 20.2335, 0.6142, 1.2815], [6.7261, 7.6154, 0.687, 0.7251], [17.3232, 16.7803, 0.7454, 0.7829], [8.6895, 15.4075, -0.7489, 1.4283], [148.3403, 14.6832, 0.6588, 1.2853], [13.845, 13.4251, 0.6621, 1.0145], [7.0902, 15.7964, 0.6133, 0.7671], [5.9566, 18.1914, 0.6972, 1.36], [4.1345, 11.1446, 0.6365, 0.4633], [4.6192, 15.5638, 0.6465, 0.7598], [5.9602, 25.6816, 0.4807, 0.8313], [9.1197, 6.8907, 0.688, 0.8708], [9.3344, 15.3665, 0.6275, 0.7182], [19.2307, 13.1192, -0.7309, 1.475], [17.2243, 9.6967, 0.7382, 1.2406], [146.7832, 7.4627, 0.6977, 0.8517], [10.8604, 20.1933, 0.7083, 0.9095], [3.2724, 15.6268, 0.7464, 1.1364], [9.9443, 13.7257, 0.552, 1.3934], [4.8072, 7.6195, 0.5892, 1.3937], [4.8349, 12.8432, 0.6018, 1.1859], [13.2577, 9.7407, 0.6618, 1.1674], [5.8173, 32.2359, 0.7156, 1.2447], [2.7501, 20.2464, 0.6859, 0.5969], [20.5287, 11.4962, -0.7029, 0.2179], [7.6017, 9.3714, 0.6643, -2.9996], [3.3047, 17.155, 0.6935, 1.2253], [3.9797, 10.1997, 0.6578, 1.3814], [148.1981, 14.077, -0.7287, 0.8355], [7.0577, 13.8084, 0.6594, 1.1634], [8.0454, 14.6348, 0.5379, 1.2852], [6.7651, 17.9702, 0.6329, 1.3811], [5.6521, 14.451, 0.6315, 1.1049], [14.7018, 16.5459, -0.7356, 1.3274], [13.1309, 10.7601, 0.4396, 0.312], [9.2123, 149.2246, 0.7115, 1.0922], [12.0106, 18.0375, 0.625, 1.0543], [147.7549, 25.5017, 0.6618, 0.5339], [147.249, 12.0162, 0.7014, 0.7365], [3.9204, 5.6734, -0.7404, 0.5519], [16.7035, 104.8908, -0.6836, 0.7085], [5.2248, 15.1767, 0.716, 0.6294], [10.9219, 15.3095, 0.5906, 1.0308], [11.3624, 16.4049, 0.6705, 0.3418], [17.1701, 23.8385, 0.627, 1.2887], [8.7084, 8.2323, 0.6427, 0.1894], [12.5665, 21.6863, 0.5944, 0.9361], [6.6251, 13.1698, 0.5706, 1.2528], [8.6765, 8.0209, -0.667, 0.942], [10.2972, 15.0555, 0.6989, 1.4452], [8.8984, 13.6505, 0.7361, 1.2766], [145.6062, 12.8569, 0.6712, 1.1707], [3.9176, 15.9445, 0.5844, 1.3432], [4.5802, 2.719, 0.6872, 1.3861], [5.5547, 11.9454, 0.6419, 0.8057], [15.5075, 10.6736, 0.6255, 1.2812], [3.9339, 20.2032, 0.722, 0.4271], [4.5523, 4.7005, 0.6309, 0.7526], [4.4899, 13.1266, 0.6094, 0.6106], [6.0478, 12.1045, 0.6424, 0.875], [6.7397, 14.2179, 0.499, 0.9415], [149.6854, 25.3653, 0.7194, 1.089], [149.3685, 6.1377, 0.6258, 0.5122], [5.7029, 6.1131, -0.7151, 0.7811], [10.3812, 20.4846, -0.7459, 1.2061], [4.6427, 24.6961, 0.7088, 0.3032], [11.6778, 29.1015, 0.5606, 1.1233], [6.2391, 22.2509, -0.7277, 1.2129], [2.9865, 24.6757, 0.6, 1.002], [13.2476, 10.3311, 0.6303, 0.6227], [147.5706, 12.6456, 0.6221, 1.4356], [5.4025, 14.8188, 0.655, 0.5827], [5.5987, 17.1144, 0.7386, 0.9056], [15.1627, 18.7731, 0.6934, 0.5261], [10.6149, 11.1934, 0.6565, 0.8148], [2.6887, 8.0723, 0.7069, 0.7742], [7.1806, 16.4837, 0.6134, 1.125], [5.6863, 24.4326, 0.7263, 0.7704], [38.035, 124.0203, 0.1459, 1.4185], [147.2003, 11.3281, 0.7302, -2.9997], [14.0243, 23.4003, -0.7489, 0.8746], [3.5728, 10.8854, 0.59, 0.9029], [8.8898, 33.2668, 0.5865, 1.4721], [7.3197, 12.8924, 0.6674, 1.3576], [13.1721, 11.3627, 0.6324, 1.1212], [11.1218, 13.287, 0.5151, 1.02], [7.1176, 8.4136, 0.7077, 0.8842], [10.2521, 8.4408, -0.7316, 1.1744], [16.0425, 26.0908, 0.712, 0.4335], [5.0699, 13.9553, 0.7284, 0.8745], [2.9667, 14.3164, 0.6687, 0.8319], [9.1266, 9.775, 0.6931, 0.776], [13.1241, 15.7294, -0.7456, 0.7473], [14.2371, 11.0579, 0.7058, 0.4323], [10.6697, 17.5472, 0.3395, 0.9437], [7.2591, 6.1099, 0.6821, 1.0616], [11.7294, 13.6669, 0.6064, 0.8669], [6.4335, 24.8121, 0.7386, 1.4918], [5.5433, 15.9488, 0.6171, 0.8886], [19.7451, 22.8939, 0.6626, 1.1359], [5.8268, 22.5209, 0.7276, 0.7145], [4.0286, 144.3363, 0.7031, 1.4836], [3.0171, 13.8644, -0.7316, 1.398], [10.8441, 19.1334, 0.736, 0.7216], [12.4367, 17.1304, 0.6456, 0.4271], [3.5956, 20.0804, 0.7444, 1.303], [10.2915, 20.2803, 0.5276, 1.3924], [7.4636, 4.7569, 0.6413, 0.61], [10.167, 11.5997, 0.5789, 1.0572], [13.7145, 13.4162, 0.5683, 0.6757], [4.372, 13.4924, 0.4907, 1.1505], [13.7647, 17.475, -0.6726, 1.3725], [8.1079, 4.8375, 0.7053, 1.4508], [8.4138, 17.3376, 0.7156, 0.4711], [3.1789, 6.2401, 0.6456, 0.9057], [16.4923, 21.2492, 0.7165, 0.7974], [149.8739, 15.8141, 0.73, 1.1476], [6.3679, 15.4296, 0.5753, 1.4253], [8.8493, 19.3018, 0.6652, 1.4284], [148.932, 14.4493, 0.5877, 0.6511], [5.2035, 5.6141, 0.7038, 1.2286], [65.7691, 99.829, 0.5826, 1.2141], [4.1357, 25.1395, 0.7083, 1.3257], [13.6907, 24.7721, 0.5407, 0.781], [144.5349, 28.5829, 0.5943, 0.8878], [15.9169, 18.0793, 0.6245, 1.3298], [12.2252, 27.0041, 0.5583, 0.6965], [13.1649, 28.1063, 0.589, 1.263], [16.975, 20.2394, 0.6986, 1.0184], [16.6912, 18.1976, 0.5862, 0.4301], [10.7683, 9.1904, 0.6973, -2.9552], [145.5724, 10.9482, 0.5875, 0.822], [6.0282, 14.0379, 0.5806, 1.2855], [7.8542, 15.4648, 0.7298, 1.4075], [14.1132, 13.6364, 0.6773, 1.078], [13.1506, 18.4016, 0.7011, 1.2593], [10.777, 8.6961, 0.7258, 0.7662], [9.1745, 14.6481, 0.6887, 1.4442], [146.7646, 16.2107, 0.48, 1.1919], [8.2505, 20.7973, 0.6031, 1.2193], [9.2723, 8.9391, -0.7129, 0.9878], [10.6071, 10.7799, -0.7376, 0.7903], [4.9162, 13.1094, -0.7472, 0.6735], [5.8128, 12.7233, 0.6837, 0.8564], [8.4538, 29.7404, 0.6116, -2.9663], [2.6301, 7.5316, 0.3391, 0.7182], [5.9135, 14.6613, 0.6383, 0.826], [3.5255, 11.0984, 0.6476, 1.2592], [15.1841, 10.2151, 0.6523, 1.2042], [9.6608, 15.9753, 0.6332, 1.1431], [6.2824, 17.1429, 0.6638, -2.9556], [6.3457, 12.807, 0.7296, 1.0378], [12.2566, 16.226, 0.6618, 1.4179], [150.3167, 14.0584, 0.6823, 0.9513], [6.6131, 12.8953, 0.6767, 0.6769], [7.0904, 16.431, 0.5718, 1.3021], [9.1948, 15.1784, 0.693, 1.1363], [7.0456, 9.2697, 0.6673, 1.0297], [11.3191, 22.2138, 0.6026, 0.8133], [11.7612, 13.7038, 0.5471, 1.1232], [8.7346, 18.8766, 0.6142, 0.5234], [19.2965, 8.7245, 0.6256, 0.6647], [10.3625, 8.09, 0.6619, 0.4546], [13.0179, 13.2046, 0.6402, 0.7556], [2.9757, 15.4274, 0.7047, 0.9118], [12.3009, 20.7435, 0.5834, 0.7012], [8.2534, 12.5568, 0.6433, 1.1354], [12.2496, 24.5621, 0.7218, 1.0744], [9.8582, 14.3487, -0.7441, 0.6801], [8.245, 17.6432, 0.6729, 0.8858], [12.1514, 13.288, 0.6439, 0.8248], [34.739, 18.5347, 0.4242, 0.261], [10.3465, 11.3662, 0.5942, 1.4445], [10.9768, 7.1505, 0.6202, 0.9264], [5.6057, 15.9546, 0.7084, 1.325], [8.13, 7.2132, 0.6994, -2.9515], [2.92, 12.4942, 0.6887, 1.1643], [8.2311, 19.9818, 0.6751, 1.005], [6.3766, 11.3996, 0.7223, 0.6815], [145.6795, 15.7141, 0.7307, 1.4444], [7.0399, 21.5438, 0.6893, 0.9968], [8.1009, 14.6879, 0.6335, 0.6635], [8.8686, 13.8583, 0.6785, 0.5314], [11.2988, 6.8851, 0.6971, 0.4204], [8.7168, 6.9556, 0.677, 0.7461], [2.5457, 6.3034, 0.5739, 0.9288], [7.535, 17.4, 0.6576, 1.0446], [14.5617, 20.4607, 0.6872, 0.6232], [6.6862, 32.6878, 0.7374, 1.0798], [3.4761, 16.3074, 0.6104, 1.403], [7.214, 25.9984, 0.5806, 1.4522], [11.0233, 12.9922, 0.6818, 1.1006], [14.6938, 11.8961, 0.7334, 1.1361], [11.3381, 21.1101, -0.6644, 1.2316], [5.0846, 26.1886, 0.6987, 1.4086], [8.3653, 7.1266, 0.6738, 0.9067], [6.0053, 7.587, -0.7361, 0.8917], [6.9216, 17.2768, 0.6881, 1.2554], [5.638, 13.6254, 0.4894, 1.1928], [15.6376, 14.0855, 0.7258, 0.779], [8.376, 9.5096, 0.6314, 1.1595], [8.1579, 18.4763, 0.7041, 1.3732], [15.7662, 11.1766, 0.6878, 0.633], [11.9797, 15.0805, 0.658, -2.962], [10.8527, 15.3697, 0.6322, 0.3735], [16.4961, 27.0677, 0.7022, 1.2169], [10.0536, 12.5207, 0.6065, 0.206], [7.7173, 17.3455, 0.6224, 1.2751], [17.3449, 21.5651, 0.6075, 1.1882], [8.8256, 20.3313, 0.7471, 1.3213], [7.6478, 15.8254, 0.6474, 0.5436], [9.641, 9.3314, 0.6947, 0.1833], [7.9345, 17.9242, 0.6764, 1.1309], [140.3263, 14.047, 0.5707, 1.2355], [6.8107, 5.7816, -0.7328, -2.864], [6.7139, 17.5562, 0.6565, 0.7377], [5.7417, 9.3818, 0.6789, -2.944], [14.0691, 10.8039, 0.737, 1.0847], [11.2233, 10.5046, 0.6524, 0.97], [8.3518, 11.4868, 0.6606, 1.4661], [13.6651, 17.0627, 0.7067, 1.334], [8.0711, 19.6283, 0.7233, 0.4776], [7.2167, 18.8127, 0.7142, 0.7421], [13.9968, 13.2698, 0.5689, 0.6814], [13.4652, 39.1703, 0.611, 1.4217], [16.2253, 13.6086, -0.7336, 0.6894], [15.8532, 15.0911, -0.7498, 0.9344], [8.7071, 25.4084, -0.7193, 1.0698], [10.683, 18.9024, 0.4643, 0.6245], [12.3881, 5.9304, 0.6362, 1.4066], [8.9258, 6.6437, 0.6876, 1.203], [8.9822, 7.2065, 0.7075, 1.4686], [6.3063, 27.5912, 0.6749, 1.282], [8.7612, 8.5527, 0.5919, 0.9899], [11.1221, 18.2773, 0.54, 0.4327], [8.7998, 8.1749, 0.6137, 1.1216], [9.5743, 9.2531, 0.687, 0.9519], [11.2363, 23.3408, 0.3974, 1.3147], [4.6681, 21.5716, 0.7233, 1.1342], [4.0905, 22.9255, 0.6108, 1.2066], [4.2177, 6.0623, 0.5348, 0.5263], [4.9891, 11.2271, 0.7289, 0.8284], [6.8531, 21.6269, 0.7302, 0.9291], [15.0982, 12.4362, 0.749, 1.0163], [5.3146, 21.1822, 0.7204, 0.508], [18.2889, 10.845, 0.7034, 1.2598], [9.5578, 12.4262, -0.7167, 1.4808], [9.7001, 14.045, 0.7275, 0.6328], [7.4859, 15.1285, 0.651, 0.5211], [2.9786, 18.171, 0.64, 0.521], [7.766, 17.0149, 0.6521, 0.79], [2.8259, 21.8139, 0.6209, -2.799], [5.4008, 16.6845, -0.7378, 0.9013], [10.506, 2.5898, 0.6741, 0.5502], [11.6229, 20.7506, 0.5847, 1.3699], [7.7708, 25.062, 0.6998, 0.8274], [3.4259, 4.2315, 0.5496, 1.2123], [11.0818, 10.0615, 0.6581, 1.1626], [8.8539, 23.1163, 0.7151, 0.834], [14.4041, 9.8056, 0.6587, 0.8131], [7.8658, 14.7654, 0.7275, 0.6611], [18.7094, 20.8911, 0.3765, 0.2323], [31.658, 108.6096, -0.4482, -1.1466], [120.3179, 2.545, -0.4404, 0.0596], [63.2973, 35.0686, 0.239, 0.4052], [9.9166, 54.3472, 0.0156, 0.0515], [105.3089, 28.8822, -0.6887, -2.3736], [25.2414, 9.2969, -0.3394, -2.3086], [60.1935, 116.257, 0.5851, -1.5864], [93.3443, 136.8804, 0.2418, -1.1188], [72.5649, 35.0493, 0.6748, 0.2558], [109.6485, 94.0675, 0.6527, -1.7214], [25.913, 94.6884, -0.5088, -2.4527], [35.8746, 141.2058, -0.6811, 1.0503], [133.0946, 111.6851, 0.183, -0.8755], [110.3298, 15.3566, 0.3181, -0.8083], [75.9233, 11.5621, -0.4305, 1.3637], [133.9089, 124.2917, 0.6806, 0.0914], [126.039, 22.833, 0.3836, -1.3729], [64.2524, 33.6678, -0.1691, -1.7035], [125.9521, 5.0126, 0.4113, 0.6773], [128.7028, 35.7757, 0.2447, -2.404], [140.3027, 148.3186, -0.2444, -1.8109], [147.8003, 58.3509, -0.4557, 0.0085], [147.9972, 19.4937, 0.6449, -1.3764], [117.9955, 18.1421, -0.3511, -0.7856], [137.1037, 20.2241, -0.3029, 0.1121], [9.1885, 106.7751, -0.2772, 0.1237], [26.8283, 93.405, 0.3095, -0.4209], [65.6906, 52.1535, 0.7345, -2.8176], [75.2914, 81.2832, -0.1146, -2.3877], [42.6263, 82.368, -0.0694, 1.3715], [78.2366, 141.6466, -0.5665, -1.924], [134.4732, 109.2582, -0.3486, 1.1735], [85.0858, 84.543, -0.4233, -0.5733], [46.2272, 74.5556, -0.6237, -1.6177], [60.2058, 81.3431, 0.622, -1.1991], [132.3422, 75.1835, -0.3401, 0.4121], [66.9784, 129.0614, 0.549, -2.74], [73.683, 19.6404, -0.3099, 0.171], [145.8027, 121.664, -0.4985, -2.8398], [41.7495, 108.298, 0.5222, -1.0279], [86.1, 45.1572, -0.7256, -2.6877], [143.4608, 139.3166, -0.2169, -0.4871], [115.3262, 5.5764, 0.502, -2.1283], [76.7522, 45.5121, -0.1641, -0.4709], [18.2903, 40.8183, 0.3283, -1.4222], [9.7331, 37.8056, 0.2636, 0.0692], [120.9414, 79.7507, 0.464, 1.4213], [140.0185, 140.9015, 0.1116, 0.8007], [128.2177, 118.0547, -0.0434, -0.017], [78.3442, 127.8131, -0.1017, 1.1969], [15.1364, 2.6706, -0.7212, -1.95], [142.6075, 120.8174, -0.335, 1.4653], [16.7345, 19.9127, -0.4044, -1.5532], [5.2992, 118.0276, 0.713, -1.1751], [127.0098, 34.7805, -0.0405, 1.3788], [148.1221, 10.2937, -0.369, -2.3869], [24.3231, 97.3217, -0.4925, 1.4903], [55.6608, 137.498, 0.5096, 1.2126], [120.1393, 114.9915, -0.0011, -2.4465], [90.0267, 105.5154, -0.5735, -1.8278], [33.0167, 148.4911, -0.4478, -0.0107], [84.5012, 146.9233, -0.1051, -0.8278], [133.6062, 79.6118, 0.22, -0.9205], [67.6907, 68.9638, 0.0407, -0.8843], [112.3326, 50.583, -0.0879, 1.0737], [149.6184, 40.2261, 0.6331, 0.3858], [76.2565, 89.0835, 0.4347, 1.33], [51.8398, 110.3076, 0.1275, -0.3834], [72.5896, 33.5394, -0.6364, -2.6495], [69.6124, 33.7939, -0.6954, -0.9382], [59.3594, 76.9795, 0.014, -2.3668], [143.4248, 99.0648, -0.5133, -2.4882], [49.2329, 35.1318, -0.3937, 1.4261], [27.5888, 122.253, -0.0207, -1.1869], [85.5945, 147.744, 0.5595, -2.4223], [53.5854, 19.3606, -0.6402, -2.6458], [118.7925, 65.3194, 0.0841, 1.2223], [144.3383, 58.8212, -0.7465, -2.2623], [141.5355, 80.9745, -0.7364, -0.4316], [98.0867, 99.8801, 0.7282, 0.093], [32.0976, 67.1378, -0.144, -2.0425], [41.5749, 85.4407, 0.4984, -2.5997], [31.2295, 74.0105, 0.0792, 0.9306], [41.9827, 42.1367, -0.4066, 0.0591], [131.8274, 30.3106, -0.3168, -2.5394], [36.998, 122.1006, -0.4627, 1.3272], [51.3424, 48.6512, 0.3471, 1.0885], [139.4889, 130.5462, 0.7481, -0.452], [142.1832, 143.4318, 0.5337, 1.0815], [112.6053, 69.3486, 0.4219, -1.7812], [51.2947, 116.5497, 0.7331, -1.7531], [90.4058, 108.0458, 0.1137, 1.4731], [112.4397, 91.8823, -0.5568, 0.8025], [143.2458, 20.7443, -0.1233, 0.6763], [73.2059, 46.1223, 0.4046, 1.4059], [25.2337, 49.8261, -0.5694, 0.666], [109.2588, 56.2133, 0.2086, 1.4106], [71.8141, 51.9042, -0.4462, -0.0565], [5.956, 30.5158, 0.0743, -2.8286]])
		particles = particles[:numParticles]
		print("PARTICLES: ",particles)
		print("PARTICLES: ",len(particles))


		t1 = time.perf_counter()

		wid = 0
		counter = 0

		start = 0
		end = loadSize

		# Put tasks into the queue
		for tid in range(numWorkers):

			toSend = {"wid":wid,"particles":particles[start:end,:],
						"seedNum":seedNum,"state":state,"otherArgs":otherArgs,
						# "spacesObj":spaces,
						"pdfsPerXskill":spaces.pdfsPerXskill,
						"evsPerXskill":spaces.evsPerXskill,
						"targetsPlateXFeet":spaces.targetsPlateXFeet,
						"targetsPlateZFeet":spaces.targetsPlateZFeet,
						"Zs":Zs}

			queue.put(toSend)
			wid += 1

			# Update slicing
			start += loadSize
			end += loadSize


		# Signal workers to start processing
		readyEvent.set()

		# Wait until all tasks are done
		queue.join()


		print("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
		print("len(spaces.pdfsPerXskill): ", len(spaces.pdfsPerXskill))
		print("len(spaces.evsPerXskill): ", len(spaces.evsPerXskill))

		# for tid, result in testDict.items():
			# print(f"Task {tid}: {result}")


		print(f"Total time: {time.perf_counter()-t1:.4f}")
		print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")

		# PROCEED WITH UPDATE HERE



		# Reset task queue for next iter
		# queue = multiprocessing.JoinableQueue()


		# Reset the event for the next round
		readyEvent.clear()


		################################################################


	# Stop the workers
	for i in range(numWorkers):
		queue.put(None)


	# Signal workers to process the termination signal
	readyEvent.set()


	# Wait for all worker processes to finish
	for process in processes:
		process.join()


	code.interact("...", local=dict(globals(), **locals()))




